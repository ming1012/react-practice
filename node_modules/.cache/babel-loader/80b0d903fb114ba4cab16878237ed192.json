{"ast":null,"code":"import _classCallCheck from \"/home/oem/react/less2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/oem/react/less2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/oem/react/less2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/oem/react/less2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/oem/react/less2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/oem/react/less2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/oem/react/less2/src/Counter.js\";\nimport React, { Component, PropTypes } from 'react';\nvar buttonStyle = {\n  margin: '10px'\n};\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter(props) {\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Counter).call(this, props));\n    _this.onClickIncrementButton = _this.onClickIncrementButton.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onClickDecrementButton = _this.onClickDecrementButton.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      count: props.initValue\n    };\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"onClickIncrementButton\",\n    value: function onClickIncrementButton() {\n      this.updateCount(true);\n    }\n  }, {\n    key: \"onClickDecrementButton\",\n    value: function onClickDecrementButton() {\n      this.updateCount(false);\n    }\n  }, {\n    key: \"updateCount\",\n    value: function updateCount(isIncrement) {\n      var previousValue = this.state.count;\n      var newValue = isIncrement ? previousValue + 1 : previousValue - 1;\n      this.setState({\n        count: newValue\n      });\n      this.props.onUpdate(newValue, previousValue);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var caption = this.props.caption;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: buttonStyle,\n        onClick: this.onClickIncrementButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"+\"), React.createElement(\"button\", {\n        style: buttonStyle,\n        onClick: this.onClickDecrementButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"-\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, caption, \" count: \", this.state.count));\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nCounter.propTypes = {\n  caption: PropTypes.string.isRequired,\n  initValue: PropTypes.number,\n  onUpdate: PropTypes.func\n};\nCounter.defaultProps = {\n  initValue: 0,\n  onUpdate: function onUpdate(f) {\n    return f;\n  } //什么都不做的函数\n\n};\nexport default Counter;","map":{"version":3,"sources":["/home/oem/react/less2/src/Counter.js"],"names":["React","Component","PropTypes","buttonStyle","margin","Counter","props","onClickIncrementButton","bind","onClickDecrementButton","state","count","initValue","updateCount","isIncrement","previousValue","newValue","setState","onUpdate","caption","propTypes","string","isRequired","number","func","defaultProps","f"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AAEA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAE;AADU,CAApB;;IAIMC,O;;;;;AAEJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AAEA,UAAKC,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BC,IAA5B,uDAA9B;AACA,UAAKC,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BD,IAA5B,uDAA9B;AAEA,UAAKE,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEL,KAAK,CAACM;AADF,KAAb;AANiB;AASlB;;;;6CAEwB;AACvB,WAAKC,WAAL,CAAiB,IAAjB;AACD;;;6CAEwB;AACvB,WAAKA,WAAL,CAAiB,KAAjB;AACD;;;gCAEWC,W,EAAa;AACvB,UAAMC,aAAa,GAAG,KAAKL,KAAL,CAAWC,KAAjC;AACA,UAAMK,QAAQ,GAAGF,WAAW,GAAGC,aAAa,GAAG,CAAnB,GAAuBA,aAAa,GAAG,CAAnE;AAEA,WAAKE,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAEK;AAAR,OAAd;AACA,WAAKV,KAAL,CAAWY,QAAX,CAAoBF,QAApB,EAA8BD,aAA9B;AACD;;;6BAEQ;AAAA,UACAI,OADA,GACW,KAAKb,KADhB,CACAa,OADA;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,KAAK,EAAEhB,WAAf;AAA4B,QAAA,OAAO,EAAE,KAAKI,sBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAQ,QAAA,KAAK,EAAEJ,WAAf;AAA4B,QAAA,OAAO,EAAE,KAAKM,sBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOU,OAAP,cAAwB,KAAKT,KAAL,CAAWC,KAAnC,CAHF,CADF;AAOD;;;;EAtCmBV,S;;AAyCtBI,OAAO,CAACe,SAAR,GAAoB;AAClBD,EAAAA,OAAO,EAAEjB,SAAS,CAACmB,MAAV,CAAiBC,UADR;AAElBV,EAAAA,SAAS,EAAEV,SAAS,CAACqB,MAFH;AAGlBL,EAAAA,QAAQ,EAAEhB,SAAS,CAACsB;AAHF,CAApB;AAMAnB,OAAO,CAACoB,YAAR,GAAuB;AACrBb,EAAAA,SAAS,EAAE,CADU;AAErBM,EAAAA,QAAQ,EAAE,kBAAAQ,CAAC;AAAA,WAAIA,CAAJ;AAAA,GAFU,CAEJ;;AAFI,CAAvB;AAKA,eAAerB,OAAf","sourcesContent":["import React, { Component, PropTypes } from 'react';\n\nconst buttonStyle = {\n  margin: '10px'\n};\n\nclass Counter extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.onClickIncrementButton = this.onClickIncrementButton.bind(this);\n    this.onClickDecrementButton = this.onClickDecrementButton.bind(this);\n\n    this.state = {\n      count: props.initValue\n    }\n  }\n\n  onClickIncrementButton() {\n    this.updateCount(true);\n  }\n\n  onClickDecrementButton() {\n    this.updateCount(false);\n  }\n\n  updateCount(isIncrement) {\n    const previousValue = this.state.count;\n    const newValue = isIncrement ? previousValue + 1 : previousValue - 1;\n\n    this.setState({count: newValue})\n    this.props.onUpdate(newValue, previousValue)\n  }\n\n  render() {\n    const {caption} = this.props;\n    return (\n      <div>\n        <button style={buttonStyle} onClick={this.onClickIncrementButton}>+</button>\n        <button style={buttonStyle} onClick={this.onClickDecrementButton}>-</button>\n        <span>{caption} count: {this.state.count}</span>\n      </div>\n    );\n  }\n}\n\nCounter.propTypes = {\n  caption: PropTypes.string.isRequired,\n  initValue: PropTypes.number,\n  onUpdate: PropTypes.func\n};\n\nCounter.defaultProps = {\n  initValue: 0,\n  onUpdate: f => f //什么都不做的函数\n};\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}